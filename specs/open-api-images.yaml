openapi: 3.0.1
info:
  title: Picture Saver API
  description: API description for Picture Saver Application
  version: 0.0.1
servers:
  - url: 'https://api.example.com'
paths:
  /create:
    post:
      summary: Создание изображения и информации о нем
      description: >-
        *Бизнес-правило*: возможность заполнить название, описание, теги и метки
        *Бизнес-правило*: проверка валидности ссылки
        *Бизнес-правило*: проверка формата загружаемого файла
        *Ограничения*: Минимальный размер файла до 100 МБ
        *Ограничения*: После создания файл изображения заменить будет нельзя.
      tags:
        - image
      requestBody:
        required: true
        content:
          # multipart/form-data:
          application/json:
            schema:
              $ref: "./open-api-components..yaml/#/components/schemas/ImageCreateRequest"
              #$ref: "#/components/schemas/ImageCreateRequest"
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: sting



  /images/{id}:
    post:
      summary: Получение информации об изображении
      description: >-
        - *Бизнес-правило*: Изображение принадлежит владельцу (id.owner == visitor)
      tags:
        - image
      parameters:
        - $ref: "./open-api-components..yaml/#/components/parameters/IdParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./open-api-components..yaml/#/components/schemas/Image"
        '401':
          $ref: "./open-api-errors.yaml/#/components/responses/Unauthorized"
        '500':
          $ref: "./open-api-errors.yaml/#/components/responses/ErrorResponse"

  /images/{id}/link:
    post:
      summary: Получение public link на изображение.
      description: >-
        Public link не требует авторизации и может быть размещен на маркетплейсе, сайте и т.д.
        *Бизнес-правило*: Изображение принадлежит владельцу (id.owner == visitor)
        *Ограничения*: Ссылка, полученная через link является валидной либо в объеме дисковой квоты на публичные изображения для пользователя, либо в течении времени жизни, заданного пользователем
      tags:
        - image
      parameters:
        - $ref: "./open-api-components..yaml/#/components/parameters/IdParam"
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: uri
        '401':
          $ref: "./open-api-errors.yaml/#/components/responses/Unauthorized"
        '500':
          $ref: "./open-api-errors.yaml/#/components/responses/ErrorResponse"

  /images/{id}/download:
    post:
      summary: Скачивание изображения
      description: >-
        *Бизнес-правило*: Изображение принадлежит владельцу (id.owner == visitor)
      parameters:
        - $ref: "./open-api-components..yaml/#/components/parameters/IdParam"
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          $ref: "./open-api-errors.yaml/#/components/responses/Unauthorized"
        '500':
          $ref: "./open-api-errors.yaml/#/components/responses/ErrorResponse"

  /images/update:
    post:
      summary: Скачивание изображения
      description: >-
        *Бизнес-правило*: Изображение принадлежит владельцу (id.owner == visitor)
        *Бизнес-правило*: Новые теги добавляются в общий список
      tags:
        - image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './open-api-components..yaml/#/components/schemas/ImageItem'
      responses:
        '200':
          description: OK
        '401':
          $ref: "./open-api-errors.yaml/#/components/responses/Unauthorized"
        '500':
          $ref: "./open-api-errors.yaml/#/components/responses/ErrorResponse"

  /images/{id}/delete:
    post:
      summary: Удаление изображения
      description: >-
        *Бизнес-правило*: Только владелец может удалять изображение (id.owner == visitor)
      parameters:
       - $ref: "./open-api-components..yaml/#/components/parameters/IdParam"
      responses:
        '200':
          description: OK
        '401':
          $ref: "./open-api-errors.yaml/#/components/responses/Unauthorized"
        '500':
          $ref: "./open-api-errors.yaml/#/components/responses/ErrorResponse"

  /labels/list:
    post:
      summary: Вывод списка возможных меток
      description: >-
        Метки представляют собой элементы метаданных изображений, аналогично EXIF, IPTC. Список расширяется только от версии к версии продукта (при расширении стандартов хранения изображений)
           - *Бизнес-правило*: Редактирование списка меток (Create, Update, Delete) выполняет администратор. На уровне MVP - задаются записями в БД
      tags:
        - special
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./open-api-components..yaml/#/components/schemas/Labels"

  /tags/list:
    post:
      summary: Вывод списка всех тегов пользователя\
      description: >-
        - *Бизнес-правило*: Теги создаются вручную или автоматически при загрузке, аннотировании или редактировании объекта
        - *Бизнес-правило*: Выводится список тегов для всех изображений, принадлежащих пользователю
        - *Бизнес-правило*: Create/Delete - в момент создания, или обновления изображения пользователь добавляет или удаляет новую строку в/из список(а) тегов
        - *Бизнес-правило*: Редактирование тега не предусмотрено
      tags:
        - special
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./open-api-components..yaml/#/components/schemas/Tags"

#components:
#  schemas:
#    ImageCreateRequest:
#      type: object
#      properties:
#        str:
#          type: string
#        num:
#          type: number